name: Publish site
on:
  push:
  workflow_dispatch:
permissions:
  pages: write
  id-token: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Build the site
        run: |
          mkdir -p _site
          
          # Create header
          cat > _site/index.html << 'EOL'
          <!DOCTYPE html>
          <html>
          <head>
            <meta charset="utf-8">
            <title>My Link Blog</title>
            <meta name="viewport" content="width=device-width, initial-scale=1">
            <style>
              body { 
                max-width: 800px; 
                margin: 0 auto; 
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif; 
                padding: 1em;
                line-height: 1.5;
              }
              .link-item { 
                margin-bottom: 2em; 
                border-bottom: 1px solid #eee; 
                padding-bottom: 1em; 
              }
              .meta, .tags { 
                color: #666; 
                font-size: 0.9em; 
              }
              a {
                color: #0366d6;
                text-decoration: none;
              }
              a:hover {
                text-decoration: underline;
              }
              h1 {
                border-bottom: 1px solid #eee;
                padding-bottom: 0.5em;
              }
              #search-container {
                margin: 1.5em 0;
              }
              #search-input {
                width: 100%;
                padding: 8px;
                font-size: 16px;
                border: 1px solid #ddd;
                border-radius: 4px;
              }
              .search-status {
                margin-top: 10px;
                font-style: italic;
                color: #666;
              }
            </style>
          </head>
          <body>
            <h1>My Link Blog</h1>
            
            <div id="search-container">
              <input type="text" id="search-input" placeholder="Search links by title, description, or tags...">
              <p id="search-status" class="search-status"></p>
            </div>
            
            <div id="links-container">
          EOL
          
          # Check if links.json exists
          if [ -f links.json ]; then
            # Verify JSON format
            cat links.json
            
            # Process links.json with more verbose error handling
            jq -r '.[] | "<div class=\"link-item\"><h2><a href=\"\(.url)\">\(.title)</a></h2><p class=\"description\">\(.description)</p><p class=\"meta\">Posted on \(.date)</p><p class=\"tags\">Tags: \(.tags | join(\", \"))</p></div>"' links.json >> _site/index.html || echo "Error processing JSON" >&2
          else
            echo "Warning: links.json not found" >&2
            echo "<p>No links available.</p>" >> _site/index.html
          fi
          
          # Close the HTML with improved search script
          cat >> _site/index.html << EOL
            </div>
            <footer>
              <p>Last updated: $(date)</p>
            </footer>
            
            <script>
              document.addEventListener('DOMContentLoaded', function() {
                const searchInput = document.getElementById('search-input');
                const searchStatus = document.getElementById('search-status');
                const linkItems = document.querySelectorAll('.link-item');
                
                searchInput.addEventListener('input', function() {
                  const searchTerm = searchInput.value.toLowerCase().trim();
                  let matchCount = 0;
                  
                  if (searchTerm === '') {
                    linkItems.forEach(item => {
                      item.style.display = '';
                    });
                    searchStatus.textContent = '';
                    return;
                  }
                  
                  linkItems.forEach(item => {
                    const itemText = item.textContent.toLowerCase();
                    
                    if (itemText.includes(searchTerm)) {
                      item.style.display = '';
                      matchCount++;
                    } else {
                      item.style.display = 'none';
                    }
                  });
                  
                  if (matchCount === 0) {
                    searchStatus.textContent = 'No matches found';
                  } else if (matchCount === 1) {
                    searchStatus.textContent = '1 match found';
                  } else {
                    searchStatus.textContent = matchCount + ' matches found';
                  }
                });
                
                document.addEventListener('keydown', function(e) {
                  if (e.key === '/' && document.activeElement !== searchInput) {
                    e.preventDefault();
                    searchInput.focus();
                  }
                });
              });
            </script>
          </body>
          </html>
          EOL
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
